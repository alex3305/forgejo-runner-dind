---
name: Docker Build, Push and Release

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main
    paths-ignore:
      - .forgejo/**
      - .vscode/**
      - .gitignore
      - .yamllint
      - LICENSE
      - README.md
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  version:
    name: Set versions
    runs-on: ubuntu-latest
    timeout-minutes: 2

    permissions:
      contents: read

    outputs:
      full_version: ${{ steps.get_version.outputs.forgejo_version }}
      minor_version: ${{ steps.get_version.outputs.minor_forgejo_version }}
      major_version: ${{ steps.get_version.outputs.major_forgejo_version }}

    steps:
      - name: ‚§µÔ∏è Checkout repository
        # yamllint disable-line rule:line-length
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          sparse-checkout: Dockerfile

      - name: üéØ Set versions
        id: get_version
        run: |
          VERSION=$(head -n1 Dockerfile | grep -oP "(\d+\.)?(\d+\.)?(\*|\d+)")

          echo "Exporting version: ${VERSION}"
          echo "forgejo_version=$VERSION" >> "$GITHUB_OUTPUT"

          MINOR_VERSION="${VERSION%.*}"
          echo "Exporting minor version: ${MINOR_VERSION}"
          echo "minor_forgejo_version=$MINOR_VERSION" >> "$GITHUB_OUTPUT"

          MAJOR_VERSION="${VERSION%.*.*}"
          echo "Exporting major version: ${MAJOR_VERSION}"
          echo "major_forgejo_version=$MAJOR_VERSION" >> "$GITHUB_OUTPUT"

  release:
    name: Release
    needs: [version]
    runs-on: ubuntu-latest
    timeout-minutes: 5

    permissions:
      contents: write

    steps:
      - name: ‚§µÔ∏è Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: üöÄ Create release
        # yamllint disable-line rule:line-length
        uses: akkuman/gitea-release-action@f119011bd6c95ab53d2084ace7b539694ce9b252 # v1
        with:
          name: "v${{ needs.version.outputs.full_version }}"
          tag_name: "v${{ needs.version.outputs.full_version }}"

      - name: üöÄ Update tags
        run: |
          git tag -fa "$MAJOR_TAG" -m "$MAJOR_TAG"
          git tag -fa "$MAJOR_TAG" -m "$MAJOR_TAG"

          git push -f origin --tags
        env:
          GIT_COMMITTER_NAME: Actions Bot
          GIT_COMMITTER_EMAIL: actions@1d.lol
          MINOR_TAG: "v${{ needs.version.outputs.minor_version }}"
          MAJOR_TAG: "v${{ needs.version.outputs.major_version }}"

  build-and-push:
    name: Docker Build and Push Container to registries
    runs-on: ubuntu-latest
    needs: [version, release]
    timeout-minutes: 30

    permissions:
      contents: read
      packages: write

    steps:
      - name: ‚§µÔ∏è Checkout created tag
        # yamllint disable-line rule:line-length
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: "v${{ needs.version.outputs.full_version }}"

      - name: üèóÔ∏è Set up Docker Buildx
        # yamllint disable-line rule:line-length
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: üîë Docker Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: docker.io
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üîë Docker Login to Local Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: 1d.lol
          username: ${{ vars.LOCAL_PACKAGES_USERNAME }}
          password: ${{ secrets.LOCAL_PACKAGES_TOKEN }}

      - name: üíÑ Prepare Docker Metadata
        id: meta
        # yamllint disable-line rule:line-length
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: |
            ${{ vars.DOCKERHUB_USERNAME }}/forgejo-runner-dind
            1d.lol/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=v${{ needs.version.outputs.full_version }},enable={{is_default_branch}}
            type=raw,value=v${{ needs.version.outputs.minor_version }},enable={{is_default_branch}}
            type=raw,value=v${{ needs.version.outputs.major_version }},enable={{is_default_branch}}
          # yamllint disable rule:line-length
          labels: |
            org.opencontainers.image.title=Forgejo Runner With Docker
            org.opencontainers.image.description=Forgejo act runner with embedded Docker in Docker
            org.opencontainers.image.authors=Alex van den Hoogen
            org.opencontainers.image.documentation=https://github.com/alex3305/forgejo-runner-dind
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.source=https://github.com/alex3305/forgejo-runner-dind
            org.opencontainers.image.url=https://github.com/alex3305/forgejo-runner-dind
            org.opencontainers.image.vendor=Alex van den Hoogen
          # yamllint enable rule:line-length

      - name: üë∑ Docker Build and push latest
        # yamllint disable-line rule:line-length
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
