---
name: Docker Build, Push and release

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  version:
    name: Set versions
    runs-on: docker
    timeout-minutes: 2

    outputs:
      full_version: ${{ steps.get_version.outputs.forgejo_version }}
      minor_version: ${{ steps.get_version.outputs.minor_forgejo_version }}
      major_version: ${{ steps.get_version.outputs.major_forgejo_version }}

    steps:
      - name: ‚§µÔ∏è Checkout repository
        # yamllint disable-line rule:line-length
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          sparse-checkout: Dockerfile

      - name: üéØ Set target versions
        id: get_version
        run: |
          VERSION=$(head -n1 Dockerfile | grep -oP "(\d+\.)?(\d+\.)?(\*|\d+)")

          echo "Exporting version: ${VERSION}"
          echo "forgejo_version=$VERSION" >> "$GITHUB_OUTPUT"

          MINOR_VERSION="${VERSION%.*}"
          echo "Exporting minor version: ${MINOR_VERSION}"
          echo "minor_forgejo_version=$MINOR_VERSION" >> "$GITHUB_OUTPUT"

          MAJOR_VERSION="${VERSION%.*.*}"
          echo "Exporting major version: ${MAJOR_VERSION}"
          echo "major_forgejo_version=$MAJOR_VERSION" >> "$GITHUB_OUTPUT"

  build:
    name: Build and push
    needs: version
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: ‚§µÔ∏è Checkout repository
        # yamllint disable-line rule:line-length
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: üîß Set up Docker Buildx
        # yamllint disable-line rule:line-length
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: üîë Login to local registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ${{ vars.REGISTRY }}
          username: ${{ vars.ACTIONS_USER }}
          password: ${{ secrets.PACKAGES_TOKEN }}

      - name: üß± Docker Build and push latest
        # yamllint disable-line rule:line-length
        uses: docker/build-push-action@14487ce63c7a62a4a324b0bfb37086795e31c6c1 # v6
        with:
          context: .
          push: true
          # yamllint disable rule:line-length
          tags: |
            ${{ vars.REGISTRY }}/${{ gitea.repository }}:v${{ env.FULL_VERSION }}
            ${{ vars.REGISTRY }}/${{ gitea.repository }}:v${{ env.MINOR_VERSION }}
            ${{ vars.REGISTRY }}/${{ gitea.repository }}:v${{ env.MAJOR_VERSION }}
          # yamllint enable rule:line-length
        env:
          FULL_VERSION: ${{ needs.version.outputs.full_version }}
          MINOR_VERSION: ${{ needs.version.outputs.minor_version }}
          MAJOR_VERSION: ${{ needs.version.outputs.major_version }}

  release:
    name: Release
    needs: [version, build]
    runs-on: docker
    timeout-minutes: 15

    steps:
      - name: ‚§µÔ∏è Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          sparse-checkout: Dockerfile

      - name: üöÄ Create release
        # yamllint disable-line rule:line-length
        uses: akkuman/gitea-release-action@f119011bd6c95ab53d2084ace7b539694ce9b252 # v1
        with:
          name: "v${{ needs.version.outputs.full_version }}"
          tag_name: "v${{ needs.version.outputs.full_version }}"

      - name: üöÄ Create additional tags
        run: |
          git tag -fa "$MINOR_TAG" -m "$MINOR_TAG"
          git tag -fa "$MAJOR_TAG" -m "$MAJOR_TAG"
          git push -f origin --tags
        env:
          GIT_COMMITTER_NAME: Actions Bot
          GIT_COMMITTER_EMAIL: actions@1d.lol
          MINOR_TAG: ${{ needs.version.outputs.minor_version }}
          MAJOR_TAG: ${{ needs.version.outputs.major_version }}
